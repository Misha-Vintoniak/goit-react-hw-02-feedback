{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Container/Container.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivPercent","className","s","list","item","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","PropTypes","arrayOf","string","isRequired","func","Section","title","children","Container","container","App","state","addFeedback","setState","countTotalFeedback","this","toFixed","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAoBeA,MAlBf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eAC/C,OACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,oBAA+BR,KAC/B,qBAAIK,UAAWC,IAAEE,KAAjB,uBAAkCP,KAClC,qBAAII,UAAWC,IAAEE,KAAjB,mBAA8BN,KAC9B,qBAAIG,UAAWC,IAAEE,KAAjB,qBAAgCL,KAChC,qBAAIE,UAAWC,IAAEE,KAAjB,8BAAyCJ,S,gCCN/C,SAASK,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLT,UAAWC,IAAES,OAEbC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,MAQXJ,EAAgBQ,UAAY,CAC1BJ,OAAQI,IAAUC,QAAQD,IAAUE,OAAOC,YAAYA,WACvDT,gBAAiBM,IAAUI,KAAKD,YAEnBX,Q,iBCLAa,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAInB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACxBC,M,iBCIQC,MARf,YAAkC,IAAbD,EAAY,EAAZA,SACnB,OAAO,qBAAKnB,UAAWC,IAAEoB,UAAlB,SAA8BF,KCmDxBG,E,4MAhDbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,YAAc,SAAAhB,GACZ,EAAKiB,UAAS,SAAAF,GAAK,sBAAQf,EAASe,EAAMf,GAAU,O,EAEtDkB,mBAAqB,WAAO,IAAD,EACM,EAAKH,MACpC,OAFyB,EACjB5B,KADiB,EACXC,QADW,EACFC,K,8EAIOC,GAC9B,MAAM,GAAN,QAAY6B,KAAKJ,MAAM5B,KAAOG,EAAS,KAAK8B,QAAQ,GAApD,O,+BAGQ,IAAD,EACwBD,KAAKJ,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ6B,KAAKD,qBAEnB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAASwB,OAAOC,KAAKH,KAAKJ,OAC1BjB,gBAAiBqB,KAAKH,gBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGS,KAAKD,qBACJ,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKD,qBACZ3B,eAAgB4B,KAAKI,gCAAgCjC,KAGvD,+D,GAzCMkC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9feffdad.chunk.js","sourcesContent":["import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nfunction Statistics({ good, neutral, bad, total, positivPercent }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>good : {good}</li>\n      <li className={s.item}>neutral : {neutral}</li>\n      <li className={s.item}>bad : {bad}</li>\n      <li className={s.item}>total : {total}</li>\n      <li className={s.item}>positivPercent : {positivPercent}</li>\n    </ul>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivPercent: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <button\n      type=\"button\"\n      className={s.button}\n      key={option}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.PropTypes = {\n  option: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Container from './Container/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = option => {\n    this.setState(state => ({ [option]: state[option] + 1 }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage(total) {\n    return `${((this.state.good / total) * 100).toFixed(1)}%`;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivPercent={this.countPositiveFeedbackPercentage(total)}\n            ></Statistics>\n          ) : (\n            <alert>No feedback given</alert>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}